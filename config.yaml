---
details:
  name: Data Structures and Algorithms
  repository_name: unit-dsa
sequence:
  Algorithm Fundamentals:
    - name: Unit 5 Launch
      elements:
        - kind: deck
        - kind: recording
    - name: Introduction to Data Structures and Algorithms
      pursuit_path: intro-to-data-structures-and-algorithms
      kind: lesson
      activity: canvas_text
      activity_description: |
        <a href='https://www.youtube.com/watch?v=kiFfp-HAu64'>
            Watch: The Secret Rules of Modern Living Algorithms 
         </a> 
         <h5>And answer the following questions on
         Canvas:</h5>
        <ol> 
          <li> Describe the algorithm to win the chocolate, and
            not the chili</li>
          <li> Name 2 types of sorting algorithms discussed in
            the video</li>
          <li> Name the algorithm used to help find matches for
            people who needed a kidney?</li>
          <li> What animal deals with the
            Traveling Salesman problem in its daily life?</li>
        <ol>
    - name: Control Flow Review
      pursuit_path: control-flow
      kind: lesson
      activity: null
    - name: Math for Developers
      pursuit_path: math-for-devs
      kind: lesson
      activity: null
    - name: Strings Review
      pursuit_path: strings
      kind: lesson
      activity: null
    - name: Dealing with Errors
      pursuit_path: dealing-w-errors
      kind: lesson
      activity: null
    - name: Arrays and Callbacks Review
      pursuit_path: arrays-and-callbacks
      kind: lesson
      activity: repository
    - name: Objects Review
      pursuit_path: objects
      kind: lesson
      activity: null
    - name: Introduction to Big-O
      pursuit_path: intro-to-big-o
      kind: lesson
      activity: canvas_text
      activity_description: |
        <p>What is the time complexity for the solutions provided
          to the following problems? Take a look at 
          <a
          href='https://replit.com/@samshapland/find-time-complexity#index.js'>this
          replit </a>
        and determine the time complexity of each solution provided.
        Click the button that says 'Start Assignment' and fill out the text box
        below with your answers. </p>
        <p>
          <ul> 
            <li>Disemvowel trolls (without Regex)</li>
            <li> 2D Array Find Greatest Sum</li>
            <li>Well of Ideas (Easy)</li>
            <li> Find Sum up to n Version 1</li>
            <li>Find Sum up to n Version 2</li>
            <li>The Barksdale Code</li> 
          </ul> 
        </p>
    - name: Introduction to Recursion
      pursuit_path: intro-to-recursion
      kind: lesson
      activity: null
    - name: Introduction to Object Oriented Programming
      pursuit_path: intro-to-oop
      kind: lesson
      activity: null
    - name: Introduction to OOP - Inheritance
      pursuit_path: intro-to-oop-inheritance
      kind: lesson
      activity: repository
    - name: Introduction to Linked Lists
      pursuit_path: intro-to-linked-lists
      kind: lesson
      activity: repository
    - name: Introduction to Stacks and Queues
      pursuit_path: intro-to-stacks-and-queues
      kind: lesson
      activity: repository
  Capstone Preparation:
    - name: Capstone Workbook
      activity: canvas_url
      activity_description: |
        <p>Go to the slide deck below. One person from each Capstone group should create a copy of the Capstone Workbook. Submit a URL to your group's copied version in this assignment.</p>
        <br> 
        <a href='https://docs.google.com/presentation/d/1zaHdrvt3e0FjpjSjWh3bEn2bhzAp6U8vGjNjfeaGbHI/edit#slide=id.g6c1b6be0e1_0_0'>Capstone Workbook</a>
        <p>Make sure that everyone in your group has Edit access to the Capstone Workbook before you submit.</p>
      points_possible: 0
      kind: task # Submission only
    - name: Group Norms
      pursuit_path: group-norms
      kind: lesson
      activity: ~
    - name: Git and GitHub with Teams
      pursuit_path: git-github-w-teams
      kind: lesson # Submission only
      activity: ~
    - name: Ideation
      pursuit_path: ideation
      kind: lesson
      activity: ~
  Projects and Assessments:
    - name: Code Wars
      pursuit_path: code-wars
      kind: project
      activity: canvas_text
      activity_description:
        You must gain an additional 150 points from your current
        score at the start of this unit. <a
        href='https://pursuit.codetrack.dev'> Pursuit Code Wars Tracker </a>
      points_possible: 150
    - name: Mock Interview 1
      kind: task
      activity: canvas_url
      activity_description: <p>Your instructor will schedule a time to do a mock
        interview with you.</p>
      points_possible: 2
    - name: Mock Interview 2
      kind: task
      activity: canvas_url
      activity_description: <p>Your instructor will schedule a time to do a mock
        interview with you.</p>
      points_possible: 2
    - name: Mock Interview 3
      kind: task
      activity: canvas_url
      activity_description: <p>Your instructor will schedule a time to do a mock
        interview with you.</p>
      points_possible: 2
    - name: Mock Interview Trivia Questions
      elements:
        - kind: guide
          pursuit_path: mock-interviews
          pursuit_subpath: trivia-questions
    - name: Peer Mock Interviews
      elements:
        - kind: guide
          pursuit_path: mock-interviews
          pursuit_subpath: peer-mock-interviews
    - name: Discussion Questions for Mock Interviews
      elements:
        - kind: guide
          pursuit_path: mock-interviews
          pursuit_subpath: discussion-questions
    - name: End of Module Reflection
      elements:
        - kind: deck
        - kind: recording
